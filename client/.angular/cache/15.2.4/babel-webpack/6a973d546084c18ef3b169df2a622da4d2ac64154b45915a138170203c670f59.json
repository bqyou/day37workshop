{"ast":null,"code":"import { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CameraService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.imageData = \"\";\n  }\n  upload(form, image) {\n    const formData = new FormData();\n    formData.set(\"title\", form['title']);\n    formData.set(\"complain\", form['complain']);\n    formData.set(\"imageFile\", image);\n    return firstValueFrom(this.httpClient.post(\"/upload\", formData));\n  }\n}\nCameraService.ɵfac = function CameraService_Factory(t) {\n  return new (t || CameraService)(i0.ɵɵinject(i1.HttpClient));\n};\nCameraService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CameraService,\n  factory: CameraService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,cAAc,QAAQ,MAAM;;;AAMrC,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAF9B,cAAS,GAAG,EAAE;EAEgC;EAE9CC,MAAM,CAACC,IAAQ,EAAEC,KAAU;IACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,GAAG,CAAC,OAAO,EAAEJ,IAAI,CAAC,OAAO,CAAC,CAAC;IACpCE,QAAQ,CAACE,GAAG,CAAC,UAAU,EAAEJ,IAAI,CAAC,UAAU,CAAC,CAAC;IAC1CE,QAAQ,CAACE,GAAG,CAAC,WAAW,EAAEH,KAAK,CAAC;IAEhC,OAAON,cAAc,CAAC,IAAI,CAACG,UAAU,CAACO,IAAI,CAAe,SAAS,EAACH,QAAQ,CAAC,CAAC;EAC/E;;AAbWN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAU,SAAbV,aAAa;EAAAW,YAFZ;AAAM","names":["firstValueFrom","CameraService","constructor","httpClient","upload","form","image","formData","FormData","set","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\bingq\\src\\day37workshop\\client\\src\\app\\service\\camera.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { UploadResult } from '../model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CameraService {\n\n  imageData = \"\"\n\n  constructor(private httpClient: HttpClient) { }\n\n  upload(form:any, image:Blob){\n    const formData = new FormData();\n    formData.set(\"title\", form['title'])\n    formData.set(\"complain\", form['complain'])\n    formData.set(\"imageFile\", image)\n\n    return firstValueFrom(this.httpClient.post<UploadResult>(\"/upload\",formData));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}